type Balance {
	tokens: [Token]
}

type Token {
	name: String
	isNative: Boolean
	amount: String
	rawAmount: String
	decimal: Int
	contractAddress: String
}

type Transaction {
	blockNumber: Int
	fromAddress: String
	gasLimit: String
	gasPrice: String
	nonce: Int
	status: String
	toAddress: String
	value: String
	txHash: String
}

type Wallet {
	address: String!
	balance: Balance
	transactions: [Transaction]
}

type Mutation {
	createWallet: [Wallet]!
		@aws_cognito_user_pools
	recoverWallet(mnemonic: String!): Wallet!
		@aws_cognito_user_pools
	sendTransaction(toAddress: String!, fromAddress: String!, amount: String!): String!
		@aws_cognito_user_pools
}

type Query {
	getWalletDetails: [Wallet]
		@aws_cognito_user_pools
	getTransactions(address: String!): [Transaction]
		@aws_cognito_user_pools
}